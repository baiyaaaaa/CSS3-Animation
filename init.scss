@charset "UTF-8";
/* 内核前缀 */
$prefixForWebkit:             true !default;
$prefixForMozilla:            true !default;
$prefixForMicrosoft:          true !default;
$prefixForOpera:              false !default; //opera从版本15开始转向webkit，所以默认为false，不输出o前缀
$prefixNo:                    true !default;
/* 动画数组 */
$animation-names: fadein fadeinT fadeinR fadeinL fadeout fadeoutT fadeoutR fadeoutB fadeoutL bounce bouncein bounceinT bounceinR bounceinB bounceinL bounceout bounceoutT bounceoutR bounceoutB bounceoutL rotatein rotateinLT rotateinLB rotateinRT rotateinRB rotateout rotateoutLT rotateoutLB rotateoutRT rotateoutRB flip flipinX flipinY flipoutX flipoutY flash shake swing wobble ring;

// prefixer
// 用于在属性上加前缀
//-----------------------------------------------------
@mixin prefixer($property, $value, $prefixes: webkit moz ms spec) {
  @each $prefix in $prefixes {
    @if $prefix == webkit and $prefixForWebkit == true {
      -webkit-#{$property}: $value;
    }
    @else if $prefix == moz and $prefixForMozilla == true {
      -moz-#{$property}: $value;
    }
    @else if $prefix == ms and $prefixForMicrosoft == true {
      -ms-#{$property}: $value;
    }
    @else if $prefix == o and $prefixForOpera == true {
      -o-#{$property}: $value;
    }
  }
  @if $prefixNo {
    #{$property}: $value;
  }
}

// disable prefix
// 设置所有前缀为false，用于@keyframes
@mixin disable-prefix-for-all() {
  $prefixForWebkit:      false;
  $prefixForMozilla:     false;
  $prefixForMicrosoft:   false;
  $prefixForOpera:       false;
  $prefixNo:             false;
}

// 在各自的@if判断里面，先禁用所有的前缀，然后开启对应的前缀
// 最后输出标准的时候，直接禁用所有的前缀
@mixin keyframes($name, $prefixes: webkit o ) {
  $originalPrefixForWebkit: $prefixForWebkit;
  $originalPrefixForMozilla: $prefixForMozilla;
  $originalPrefixForMicrosoft: $prefixForMicrosoft;
  $originalPrefixForOpera: $prefixForOpera;
  $originalPrefixNo: $prefixNo;
  
  @each $prefix in $prefixes {
    @if $prefix == webkit and $originalPrefixForWebkit == true {
      @include disable-prefix-for-all();
      $prefixForWebkit: true;
      @-webkit-keyframes #{$name} {
        @content;
      }
    }
    @if $prefix == moz and $originalPrefixForMozilla == true {
      @include disable-prefix-for-all();
      $prefixForMozilla: true;
      @-moz-keyframes #{$name} {
        @content;
      }
    }
    @if $prefix == ms and $originalPrefixForMicrosoft == true {
      @include disable-prefix-for-all();
      $prefixForMicrosoft: true;
      @-ms-keyframes #{$name} {
        @content;
      }
    }
    @if $prefix == o and $originalPrefixForOpera == true {
      @include disable-prefix-for-all();
      $prefixForOpera: true;
      @-o-keyframes #{$name} {
        @content;
      }
    }
  }

  @include disable-prefix-for-all();
  $prefixNo: true;
  @keyframes #{$name} {
    @content;
  }

  $prefixForWebkit:       $originalPrefixForWebkit;
  $prefixForMozilla:      $originalPrefixForMozilla;
  $prefixForMicrosoft:    $originalPrefixForMicrosoft;
  $prefixForOpera:        $originalPrefixForOpera;
  $prefixNo:              $originalPrefixNo;
}

// Transformations
//------------------------------------
// rotate
@mixin rotate($degrees...) {
  @include prefixer(transform, rotate($degrees));
}
@mixin rotate3D($degrees...) {
  @include prefixer(transform, rotate3D($degrees));
}
@mixin rotateX($degrees) {
  @include prefixer(transform, rotateX($degrees));
}
@mixin rotateY($degrees) {
  @include prefixer(transform, rotateY($degrees));
}
@mixin rotateZ($degrees) {
  @include prefixer(transform, rotateZ($degrees) );
}

// scale
@mixin scale($ratio...) {
  @include prefixer(transform, scale($ratio));
}
@mixin scale3D($ratio...) {
  @include prefixer(transform, scale3D($ratio));
}
@mixin scaleX($ratio) {
  @include prefixer(transform, scaleX($ratio));
}
@mixin scaleY($ratio) {
  @include prefixer(transform, scaleY($ratio));
}
@mixin scaleZ($ratio) {
  @include prefixer(transform, scaleZ($ratio));
}

// translate
@mixin translate($px...) {
  @include prefixer(transform, translate($px));
}
@mixin translate3D($px...) {
  @include prefixer(transform, translate3D($px));
}
@mixin translateX($px) {
  @include prefixer(transform, translateX($px));
}
@mixin translateY($px) {
  @include prefixer(transform, translateY($px));
}
@mixin translateZ($px) {
  @include prefixer(transform, translateZ($px));
}

// skew
// skew时一般会有锯齿什么的，解决方法是添加backface-visibility为hidden，详见 https://github.com/twitter/bootstrap/issues/5319
@mixin skew($degrees...) {
  @include prefixer(transform, skew($degrees));
  @include backface-visibility;
}
@mixin skewX($degrees) {
  @include prefixer(transform, skewX($degrees));
  @include backface-visibility;
}
@mixin skewY($degrees) {
  @include prefixer(transform, skewY($degrees));
  @include backface-visibility;
}

/* 淡入 */
@mixin fadein($direction, $fromOP:0, $toOP:1) {
  @if $direction == top {
    @include keyframes(fadeinT, webkit moz ms spec) {
      0%{opacity:0;@include translateY(-100px);}
      100%{opacity:1;}
    }
  }
  @if $direction == right {
    @include keyframes(fadeinR, webkit moz ms spec) {
      0%{opacity:0;@include translateX(100px);}
      100%{opacity:1;}
    }
  }
  @if $direction == bottom {
    @include keyframes(fadeinB, webkit moz ms spec) {
      0%{opacity:0;@include translateY(100px);}
      100%{opacity:1;}
    }
  }
  @if $direction == left {
    @include keyframes(fadeinL, webkit moz ms spec) {
      0%{opacity:0;@include translateX(-100px);}
      100%{opacity:1;}
    }
  }
}